name: Puppies Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    

jobs:
  build:
    strategy: 
      matrix:
        os: [ ubuntu-latest ]
        dotnet-version: [ 8.0.x ]
    runs-on: ${{ matrix.os }}
    name: Build and Unit Test

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal --logger trx
    - name: Dotnet Test Reporter
      if: always()
      uses: bibipkins/dotnet-test-reporter@v1.5.3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        comment-title: 'Unit Test Results'
        results-path: ./PuppiesTest/TestResults/*.trx
        coverage-path: ./PuppiesTest/TestResults/coverage.xml
        coverage-threshold: 0
    - name: Publish build
      run: dotnet publish Puppies -o build
    - name: Tar Build
      run: tar -cvf build-${{ matrix.os }}-${{ matrix.dotnet-version }}.tar.gz build        
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
          name: build-${{ matrix.os }}-${{ matrix.dotnet-version }}
          path: build-${{ matrix.os }}-${{ matrix.dotnet-version }}.tar.gz
      
      
        
  acceptance_test:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet-version: [ 8.0.x ]
    runs-on: ${{ matrix.os }}
    name: Acceptance Test

    needs: build

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ matrix.dotnet-version }}
      - name: Create Build Dir
        run: mkdir build
      - name: Expand Build Tar
        run:  tar -xvf build-${{ matrix.os }}-${{ matrix.dotnet-version }}.tar.gz -C build
          
  package:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet-version: [ 8.0.x ]
    runs-on: ${{ matrix.os }}
    name: Package
    
    needs: acceptance_test
    
    steps:
      - name: TODO
        run: echo "TODO"
          
